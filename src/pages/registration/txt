/* eslint-disable react/no-unescaped-entities */
import { Link, useNavigate } from "react-router-dom";
import { useContext, useState } from "react";
import toast from "react-hot-toast";
import { signInWithEmailAndPassword } from "firebase/auth";
import { auth, fireDB } from "../../firebase/FirebaseConfig"; // Import Firebase configuration
import { query, collection, where, onSnapshot } from "firebase/firestore";
import { Loader } from "lucide-react";
import myContext from "../../context/MyContext";

const Login = () => {

    const { loading, setLoading } = useContext(myContext);
    const navigate = useNavigate()

    // user login state
    const [userLogin, setUserLogin] = useState({
        email: "",
        password: ""
    })

    // const handleInputChange = (e) => {
    //     const { name, value } = e.target;
    //     setUserLogin(prevState => ({
    //         ...prevState,
    //         [name]: value
    //     }))
    // }

    // more optimize way
    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setUserLogin({
            ...userLogin,
            [name]: value
        });
    };

    // user login function
    const userLoginFunction = async () => {
        if (userLogin.password === "" || userLogin.email === "") {
            return toast.error("All fields are required")
        }

        setLoading(true)

        try {
            const users = await signInWithEmailAndPassword(auth, userLogin.email, userLogin.password)
            console.log(users.user)

            try {
                const q = query(
                    collection(fireDB, "user"), // Specify the collection to query (in this case, "user")
                    where('uid', '==', users?.user?.uid) // Add a condition to filter documents (where 'uid' equals the user's UID)
                );
                

                const data = onSnapshot(q, (QuerySnapshot) => {
                    let user;
                    QuerySnapshot.forEach((doc) => user = doc.data())
                    console.log("User data:", user);
                    if (user) {
                        console.log("User role:", user.role);
                    }
                    localStorage.setItem("users", JSON.stringify(user))
                    setUserLogin({
                        email: "",
                        password: ""
                    })
                    toast.success("login successfully")
                    setLoading(false)

                    if (user && user.role === "user") {
                        navigate("/user-dashboard")
                    } else {
                        navigate("/admin-dashboard")
                    }

                })

                return () => data;

            } catch (error) {
                console.log(error)
                setLoading(false)
            }

        } catch (error) {
            console.log(error);
            setLoading(false);
        }

    }

    return (
        <div className='flex justify-center items-center h-screen'>
            {loading && <Loader />}
            {/* Login Form  */}
            <div className="login_Form bg-pink-50 px-1 lg:px-8 py-6 border border-pink-100 rounded-xl shadow-md">

                {/* Top Heading  */}
                <div className="mb-5">
                    <h2 className='text-center text-2xl font-bold text-pink-500 '>
                        Login
                    </h2>
                </div>

                {/* Input Two  */}
                <div className="mb-3">
                    <input
                        type="email"
                        name="email"
                        value={userLogin.email}
                        onChange={handleInputChange}
                        placeholder='Email Address'
                        className='bg-pink-50 border border-pink-200 px-2 py-2 w-96 rounded-md outline-none placeholder-pink-200'
                    />
                </div>

                {/* Input Three  */}
                <div className="mb-5">
                    <input
                        type="password"
                        name="password"
                        value={userLogin.password}
                        onChange={handleInputChange}
                        placeholder='Password'
                        className='bg-pink-50 border border-pink-200 px-2 py-2 w-96 rounded-md outline-none placeholder-pink-200'
                    />
                </div>

                {/* Signup Button  */}
                <div className="mb-5">
                    <button
                        onClick={userLoginFunction}
                        type='button'
                        className='bg-pink-500 hover:bg-pink-600 w-full text-white text-center py-2 font-bold rounded-md '
                    >
                        Login
                    </button>
                </div>

                <div>
                    <h2 className='text-black'>Don't Have an account <Link className=' text-pink-500 font-bold' to={'/signup'}>Signup</Link></h2>
                </div>

            </div>
        </div>
    );
}

export default Login;